# app/models/user.rb
# Model user generated by Devise
class User < ActiveRecord::Base
  rolify
  # Include default devise modules. Others available are:
  # :confirmable, :lockable, :timeoutable and :omniauthable

  devise :database_authenticatable, :registerable,
         :recoverable, :rememberable, :trackable, :validatable,
         :omniauthable


  HUMANIZED_ATTRIBUTES = {
      :id => "Usuario",
      :email => "E-mail",
      :password => "Senha",
      :password_confirmation => "Confirmação de Senha",
      :remember_me => "Lembrar-me",
      :current_password => 'Senha Atual',
      :first_name => 'Primeiro Nome',
      :last_name => 'Ultimo Nome',
      :cpf => "CPF",
      :nickname => "Nickname"
  }

  #def admin?
  # self.admin == true
  #end

  # validates :terms_of_service, acceptance: true

  usar_como_cpf :cpf

  has_many :authorizations
  has_many :attachments, as: :origin
  mount_uploader :avatar, AttachmentsUploader
  accepts_nested_attributes_for :attachments

  def self.human_attribute_name(attr, vazio=nil)
    HUMANIZED_ATTRIBUTES[attr.to_sym] || super
  end

  # Generate csv from all atributes of user
  def self.to_csv(options = {})
    CSV.generate(options) do |csv|
      lista = []
      column_names.each { |coluna| lista << self.human_attribute_name(coluna) }
      csv << lista
      all.each { |registro| csv << registro.attributes.values_at(*column_names) }
    end
  end

  # Verify if cpf attribute is valid
  def has_valid_cpf?
    self.cpf.valido?
  end

  def need_updated_account?
    self.cpf.nil? or self.first_name.nil? or self.last_name.nil?
  end

  def self.from_omniauth(access_token)
    data = access_token.info
    user = User.where(:email => data["email"]).first

    unless user
      user = User.new
      if access_token.provider == 'google_oauth2'
        user.first_name = data["first_name"]
        user.last_name = data["last_name"]
      elsif access_token.provider == 'facebook'
        user.first_name = data["name"]
      end
      user.email = data["email"]
      user.password = Devise.friendly_token[0, 20]
      user.provider = access_token.provider
      user.uid = access_token.uid
      user.save
    end
    user
  end

#Returns a full name of user, a combination of first name and last name
  def full_name
    if first_name and last_name
      " #{first_name} #{last_name}"
    else
      " #{email.split('@')[0]}"
    end

  end
end
